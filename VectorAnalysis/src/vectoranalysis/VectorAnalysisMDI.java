/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vectoranalysis;

import java.awt.Dimension;
import ij.ImagePlus;
import ij.ImageStack;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import NDL_JavaClassLib.*;
/**
 *
 * @author balam
 */
public class VectorAnalysisMDI extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form VectorAnalysisMDI
     */
    DataManager dManager = new DataManager();
    private ImagePlus hmapStk;
    private ImageStack stk;
    private int nGrps;
    private int nAnimals;
    private int nTrial;
    //private ComboBoxModel<String> TrialModel;
    
    public VectorAnalysisMDI() {
       
        Dimension d = this.getMaximumSize();
        this.setSize(d);
        this.setTitle("Vector Analysis for Navigation");
        initComponents();
        
        this.AnimalGrpModel = (DefaultTableModel)this.AnimalGrpSummaryTable.getModel();
        this.FileAssignmentModel = (DefaultTableModel)this.FileAssignmentTable.getModel();
        this.FileDetailModel = (DefaultTableModel)this.FileDetail_Table.getModel();
        this.TrialNoModel =  new extTableModel((DefaultTableModel)this.Trial_No_Table.getModel());
        this.Trial_No_Table.setModel(TrialNoModel);
        this.grpNames = new ArrayList<String>();
        this.trialNames = new ArrayList<String>();
        
        this.treeModel = (DefaultTreeModel)this.expDgnTree.getModel();
        expRoot = new DefaultMutableTreeNode("Experimental Design");
        trialRoot = new DefaultMutableTreeNode("Trials View");
        grpRoot =new DefaultMutableTreeNode("Groups View");
        
        treeModel.setRoot(expRoot);
        treeModel.insertNodeInto(trialRoot, expRoot, 0);
        treeModel.insertNodeInto(grpRoot, expRoot, 1);
        expDgnTree.setEditable(true);
        //treeModel.reload();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        DeskTopPanel = new javax.swing.JPanel();
        InfoTab = new javax.swing.JTabbedPane();
        ExpDef_jPanel = new javax.swing.JPanel();
        jLabel_Number_of_GrpTxt = new javax.swing.JLabel();
        jFormattedTextField_NoOfGrps = new javax.swing.JFormattedTextField();
        jLabel_NoOfAnimals = new javax.swing.JLabel();
        SampleSizeSel = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        AnimalGrpSummaryTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        Trial_No_Table = new javax.swing.JTable();
        upDateButton = new javax.swing.JButton();
        surfaceFitButton = new javax.swing.JButton();
        nAnimals_Text = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jFormattedText_nTrials = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        reset_AnGrTr_Button = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        AllGrpsinAllTrialCheckBox = new javax.swing.JCheckBox();
        DataFiles_jPanel = new javax.swing.JPanel();
        AddFiles_Button = new javax.swing.JButton();
        RemoveFile_Button = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        FileDetail_Table = new javax.swing.JTable();
        Assign_Button = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        FileAssignmentTable = new javax.swing.JTable();
        GrpSelComboBox = new javax.swing.JComboBox<>();
        AnimalSelComboBox = new javax.swing.JComboBox<>();
        TrialSelComboBox = new javax.swing.JComboBox<>();
        SelDesLabel = new javax.swing.JLabel();
        GrpLabel = new javax.swing.JLabel();
        TrialLabel = new javax.swing.JLabel();
        AnimalLabel = new javax.swing.JLabel();
        OpenFileAssignmentsButton = new javax.swing.JButton();
        SaveFileAssignmentsButton = new javax.swing.JButton();
        xResTxtField = new javax.swing.JFormattedTextField();
        yResTxtField = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        expFileNoJText = new javax.swing.JTextField();
        assignFileJTxt = new javax.swing.JTextField();
        remainingDatafilesJText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jSpinner1 = new javax.swing.JSpinner();
        AnalysisDesign_jPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        expDgnTree = new javax.swing.JTree();
        RunGrp_Button = new javax.swing.JButton();
        HeatMap_Button = new javax.swing.JButton();
        QuadAna_Button = new javax.swing.JButton();
        GenConMaps_Button = new javax.swing.JButton();
        GenCurlMaps_Button = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        PlatXjFtTxt = new javax.swing.JFormattedTextField();
        PlatYjFtTxt1 = new javax.swing.JFormattedTextField();
        ocXjFtTxt2 = new javax.swing.JFormattedTextField();
        ocYjFtTxt3 = new javax.swing.JFormattedTextField();
        ImageDisplay_Panel = new javax.swing.JPanel();
        MessageBox_Panel = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        jFolderOptions = new javax.swing.JMenuItem();
        ImportMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        mapsMenu = new javax.swing.JMenu();
        residencemapMenuItem = new javax.swing.JMenuItem();
        analysisMenu = new javax.swing.JMenu();
        jMenuItemGrpID = new javax.swing.JMenuItem();
        jMenuItemExpDes = new javax.swing.JMenuItem();
        jMenuItemMeasure = new javax.swing.JMenuItem();
        jMenuItemCompute = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        InfoTab.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        InfoTab.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        jLabel_Number_of_GrpTxt.setText("Number of Groups");

        jFormattedTextField_NoOfGrps.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0"))));
        jFormattedTextField_NoOfGrps.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jFormattedTextField_NoOfGrps.setText("2");
        jFormattedTextField_NoOfGrps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField_NoOfGrpsActionPerformed(evt);
            }
        });

        jLabel_NoOfAnimals.setText("Number of Animals per Grp");

        SampleSizeSel.setSelected(true);
        SampleSizeSel.setText("Same N for all grps");
        SampleSizeSel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        SampleSizeSel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SampleSizeSelItemStateChanged(evt);
            }
        });

        AnimalGrpSummaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S No", "Group Name", "Animals"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        AnimalGrpSummaryTable.setEnabled(false);
        AnimalGrpSummaryTable.setShowGrid(true);
        jScrollPane3.setViewportView(AnimalGrpSummaryTable);

        Trial_No_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", ""
            }
        ));
        Trial_No_Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        Trial_No_Table.setColumnSelectionAllowed(true);
        Trial_No_Table.setEnabled(false);
        jScrollPane1.setViewportView(Trial_No_Table);
        Trial_No_Table.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        upDateButton.setText("Finalise  Animals Grp Trial #s");
        upDateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upDateButtonActionPerformed(evt);
            }
        });

        surfaceFitButton.setText("Settings for Surface Fit");
        surfaceFitButton.setEnabled(false);

        nAnimals_Text.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0"))));
        nAnimals_Text.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        nAnimals_Text.setText("5");

        jLabel1.setText("Number of animals (N) ");

        jFormattedText_nTrials.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0"))));
        jFormattedText_nTrials.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jFormattedText_nTrials.setText("2");

        jLabel2.setText("Number of Trials");

        reset_AnGrTr_Button.setText("Reset Animals Grp Trial #s ");
        reset_AnGrTr_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_AnGrTr_ButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Group Selection Table:");

        AllGrpsinAllTrialCheckBox.setSelected(true);
        AllGrpsinAllTrialCheckBox.setText(" All groups are there in all trials");
        AllGrpsinAllTrialCheckBox.setEnabled(false);
        AllGrpsinAllTrialCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                AllGrpsinAllTrialCheckBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout ExpDef_jPanelLayout = new javax.swing.GroupLayout(ExpDef_jPanel);
        ExpDef_jPanel.setLayout(ExpDef_jPanelLayout);
        ExpDef_jPanelLayout.setHorizontalGroup(
            ExpDef_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExpDef_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ExpDef_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ExpDef_jPanelLayout.createSequentialGroup()
                        .addGroup(ExpDef_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ExpDef_jPanelLayout.createSequentialGroup()
                                .addComponent(upDateButton)
                                .addGap(28, 28, 28)
                                .addComponent(reset_AnGrTr_Button))
                            .addComponent(surfaceFitButton))
                        .addContainerGap(119, Short.MAX_VALUE))
                    .addGroup(ExpDef_jPanelLayout.createSequentialGroup()
                        .addGroup(ExpDef_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ExpDef_jPanelLayout.createSequentialGroup()
                                .addComponent(jLabel_Number_of_GrpTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(32, 32, 32))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ExpDef_jPanelLayout.createSequentialGroup()
                                .addGroup(ExpDef_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SampleSizeSel, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel_NoOfAnimals, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(15, 15, 15)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(ExpDef_jPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(ExpDef_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nAnimals_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedText_nTrials)
                            .addComponent(jFormattedTextField_NoOfGrps, javax.swing.GroupLayout.PREFERRED_SIZE, 27, Short.MAX_VALUE))
                        .addGap(37, 37, 37))
                    .addGroup(ExpDef_jPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(ExpDef_jPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(ExpDef_jPanelLayout.createSequentialGroup()
                        .addGroup(ExpDef_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ExpDef_jPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(AllGrpsinAllTrialCheckBox))
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        ExpDef_jPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jFormattedTextField_NoOfGrps, jFormattedText_nTrials, nAnimals_Text});

        ExpDef_jPanelLayout.setVerticalGroup(
            ExpDef_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ExpDef_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ExpDef_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedTextField_NoOfGrps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_Number_of_GrpTxt))
                .addGap(1, 1, 1)
                .addGroup(ExpDef_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFormattedText_nTrials, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(ExpDef_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(SampleSizeSel)
                    .addComponent(jLabel1)
                    .addComponent(nAnimals_Text, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jLabel_NoOfAnimals)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addGap(13, 13, 13)
                .addComponent(AllGrpsinAllTrialCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(ExpDef_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(upDateButton)
                    .addComponent(reset_AnGrTr_Button))
                .addGap(18, 18, 18)
                .addComponent(surfaceFitButton)
                .addGap(329, 329, 329))
        );

        ExpDef_jPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jFormattedTextField_NoOfGrps, jFormattedText_nTrials, nAnimals_Text});

        InfoTab.addTab("Experiment Definition", ExpDef_jPanel);

        AddFiles_Button.setText(" Add Files");
        AddFiles_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddFiles_ButtonActionPerformed(evt);
            }
        });

        RemoveFile_Button.setText("Remove File");
        RemoveFile_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveFile_ButtonActionPerformed(evt);
            }
        });

        FileDetail_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Path", "File name", "Start Frame", "End Frame", "FPS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        FileDetail_Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        FileDetail_Table.setColumnSelectionAllowed(true);
        jScrollPane6.setViewportView(FileDetail_Table);
        FileDetail_Table.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        Assign_Button.setText("Assign");
        Assign_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Assign_ButtonActionPerformed(evt);
            }
        });

        FileAssignmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File name", "Animal", "Group", "Trial Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane7.setViewportView(FileAssignmentTable);

        GrpSelComboBox.setEditable(true);
        GrpSelComboBox.setDoubleBuffered(true);
        GrpSelComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GrpSelComboBoxActionPerformed(evt);
            }
        });

        AnimalSelComboBox.setEnabled(false);

        TrialSelComboBox.setEditable(true);
        TrialSelComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TrialSelComboBoxActionPerformed(evt);
            }
        });

        SelDesLabel.setText("Select Grp, Trial and Animal for assigning the data files");

        GrpLabel.setText("Group");

        TrialLabel.setText("Trial");

        AnimalLabel.setText("Animal");

        OpenFileAssignmentsButton.setText("Open File Assignments");
        OpenFileAssignmentsButton.setEnabled(false);

        SaveFileAssignmentsButton.setText("Save Fle Assignments");
        SaveFileAssignmentsButton.setEnabled(false);

        xResTxtField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0"))));
        xResTxtField.setText("740");
        xResTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xResTxtFieldActionPerformed(evt);
            }
        });

        yResTxtField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("0"))));
        yResTxtField.setText("1080");
        yResTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yResTxtFieldActionPerformed(evt);
            }
        });

        jLabel4.setText("x Res");

        jLabel5.setText("yRes");

        jLabel6.setText("Total Number of Files Expected");

        jLabel7.setText("Total Number of Files Assigned");

        jLabel8.setText("Remainaing data files that require assignment/selection");

        expFileNoJText.setEnabled(false);

        assignFileJTxt.setEnabled(false);

        remainingDatafilesJText.setEnabled(false);

        jButton1.setText("Finalise File Assignment");

        jSpinner1.setModel(new javax.swing.SpinnerListModel(new String[] {""}));

        javax.swing.GroupLayout DataFiles_jPanelLayout = new javax.swing.GroupLayout(DataFiles_jPanel);
        DataFiles_jPanel.setLayout(DataFiles_jPanelLayout);
        DataFiles_jPanelLayout.setHorizontalGroup(
            DataFiles_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DataFiles_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DataFiles_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DataFiles_jPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(SelDesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92))
                    .addGroup(DataFiles_jPanelLayout.createSequentialGroup()
                        .addComponent(SaveFileAssignmentsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(OpenFileAssignmentsButton))
                    .addGroup(DataFiles_jPanelLayout.createSequentialGroup()
                        .addGroup(DataFiles_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(DataFiles_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(DataFiles_jPanelLayout.createSequentialGroup()
                                    .addComponent(AnimalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(AnimalSelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(TrialLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(TrialSelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(GrpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(GrpSelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(DataFiles_jPanelLayout.createSequentialGroup()
                                    .addComponent(AddFiles_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(RemoveFile_Button)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Assign_Button)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, DataFiles_jPanelLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(xResTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(yResTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jSpinner1)))
                .addGap(0, 54, Short.MAX_VALUE))
            .addGroup(DataFiles_jPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(DataFiles_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(DataFiles_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(expFileNoJText, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assignFileJTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(remainingDatafilesJText, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DataFiles_jPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(139, 139, 139))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DataFiles_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                .addContainerGap())
        );

        DataFiles_jPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel6, jLabel7});

        DataFiles_jPanelLayout.setVerticalGroup(
            DataFiles_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DataFiles_jPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SelDesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DataFiles_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TrialSelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AnimalSelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GrpSelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AnimalLabel)
                    .addComponent(TrialLabel)
                    .addComponent(GrpLabel)
                    .addComponent(jSpinner1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(DataFiles_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddFiles_Button)
                    .addComponent(RemoveFile_Button)
                    .addComponent(Assign_Button))
                .addGap(10, 10, 10)
                .addGroup(DataFiles_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OpenFileAssignmentsButton)
                    .addComponent(SaveFileAssignmentsButton))
                .addGap(18, 18, 18)
                .addGroup(DataFiles_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xResTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yResTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(DataFiles_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(DataFiles_jPanelLayout.createSequentialGroup()
                        .addComponent(expFileNoJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(assignFileJTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(remainingDatafilesJText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DataFiles_jPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel7)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel8)))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(16, 16, 16))
        );

        DataFiles_jPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {assignFileJTxt, expFileNoJText, jLabel6, jLabel7, jLabel8, remainingDatafilesJText});

        InfoTab.addTab("Data Files", DataFiles_jPanel);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Experiment");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Probe Trial 1");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Grp 1");
        javax.swing.tree.DefaultMutableTreeNode treeNode4 = new javax.swing.tree.DefaultMutableTreeNode("<click to choose  a datafile>");
        treeNode3.add(treeNode4);
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        expDgnTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        expDgnTree.setAutoscrolls(true);
        expDgnTree.setDoubleBuffered(true);
        expDgnTree.setDragEnabled(true);
        expDgnTree.setEditable(true);
        expDgnTree.setLargeModel(true);
        expDgnTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                expDgnTreeMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(expDgnTree);

        RunGrp_Button.setText("Run Grp Analysis");
        RunGrp_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RunGrp_ButtonActionPerformed(evt);
            }
        });

        HeatMap_Button.setText("Generate Heat Map");

        QuadAna_Button.setText("Quadrant Analysis");

        GenConMaps_Button.setText("Generate Convergence Maps");

        GenCurlMaps_Button.setText("Generate Curl Maps");

        jLabel9.setText("Platform X Co-Ordinate");

        jLabel10.setText("Platform Y Co-Ordinate");

        jLabel11.setText("OC X Co-Ordinate");

        jLabel12.setText("OC Y Co-Ordinate");

        PlatXjFtTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        PlatXjFtTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        PlatXjFtTxt.setText("120");

        PlatYjFtTxt1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        PlatYjFtTxt1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        PlatYjFtTxt1.setText("120");

        ocXjFtTxt2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        ocXjFtTxt2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ocXjFtTxt2.setText("120");

        ocYjFtTxt3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        ocYjFtTxt3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ocYjFtTxt3.setText("120");

        javax.swing.GroupLayout AnalysisDesign_jPanelLayout = new javax.swing.GroupLayout(AnalysisDesign_jPanel);
        AnalysisDesign_jPanel.setLayout(AnalysisDesign_jPanelLayout);
        AnalysisDesign_jPanelLayout.setHorizontalGroup(
            AnalysisDesign_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AnalysisDesign_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AnalysisDesign_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(AnalysisDesign_jPanelLayout.createSequentialGroup()
                        .addGroup(AnalysisDesign_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(HeatMap_Button)
                            .addComponent(GenCurlMaps_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(GenConMaps_Button)
                            .addComponent(QuadAna_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RunGrp_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                        .addGroup(AnalysisDesign_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(AnalysisDesign_jPanelLayout.createSequentialGroup()
                                .addGroup(AnalysisDesign_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(AnalysisDesign_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ocXjFtTxt2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ocYjFtTxt3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AnalysisDesign_jPanelLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(PlatXjFtTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AnalysisDesign_jPanelLayout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(PlatYjFtTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );

        AnalysisDesign_jPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {GenConMaps_Button, GenCurlMaps_Button, HeatMap_Button, QuadAna_Button, RunGrp_Button});

        AnalysisDesign_jPanelLayout.setVerticalGroup(
            AnalysisDesign_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AnalysisDesign_jPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(AnalysisDesign_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AnalysisDesign_jPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(RunGrp_Button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(QuadAna_Button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(HeatMap_Button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GenConMaps_Button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GenCurlMaps_Button))
                    .addGroup(AnalysisDesign_jPanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(AnalysisDesign_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(PlatXjFtTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(AnalysisDesign_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PlatYjFtTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AnalysisDesign_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(ocXjFtTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(AnalysisDesign_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(ocYjFtTxt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(130, Short.MAX_VALUE))
        );

        InfoTab.addTab("Analysis Design", AnalysisDesign_jPanel);

        ImageDisplay_Panel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ImageDisplay_Panel.setMaximumSize(new java.awt.Dimension(650000, 6500000));
        ImageDisplay_Panel.setName("ImageDisplay Panel"); // NOI18N

        javax.swing.GroupLayout ImageDisplay_PanelLayout = new javax.swing.GroupLayout(ImageDisplay_Panel);
        ImageDisplay_Panel.setLayout(ImageDisplay_PanelLayout);
        ImageDisplay_PanelLayout.setHorizontalGroup(
            ImageDisplay_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );
        ImageDisplay_PanelLayout.setVerticalGroup(
            ImageDisplay_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        MessageBox_Panel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout MessageBox_PanelLayout = new javax.swing.GroupLayout(MessageBox_Panel);
        MessageBox_Panel.setLayout(MessageBox_PanelLayout);
        MessageBox_PanelLayout.setHorizontalGroup(
            MessageBox_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        MessageBox_PanelLayout.setVerticalGroup(
            MessageBox_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 409, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout DeskTopPanelLayout = new javax.swing.GroupLayout(DeskTopPanel);
        DeskTopPanel.setLayout(DeskTopPanelLayout);
        DeskTopPanelLayout.setHorizontalGroup(
            DeskTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeskTopPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(DeskTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ImageDisplay_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MessageBox_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addComponent(InfoTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        DeskTopPanelLayout.setVerticalGroup(
            DeskTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeskTopPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DeskTopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DeskTopPanelLayout.createSequentialGroup()
                        .addComponent(ImageDisplay_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MessageBox_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(InfoTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        desktopPane.setLayer(DeskTopPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout desktopPaneLayout = new javax.swing.GroupLayout(desktopPane);
        desktopPane.setLayout(desktopPaneLayout);
        desktopPaneLayout.setHorizontalGroup(
            desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DeskTopPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        desktopPaneLayout.setVerticalGroup(
            desktopPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DeskTopPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        jFolderOptions.setText("Folder Preferences");
        jFolderOptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFolderOptionsActionPerformed(evt);
            }
        });
        fileMenu.add(jFolderOptions);

        ImportMenuItem.setText("Import Data");
        ImportMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(ImportMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        mapsMenu.setText("Maps");

        residencemapMenuItem.setText("Create Residence Map");
        residencemapMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                residencemapMenuItemActionPerformed(evt);
            }
        });
        mapsMenu.add(residencemapMenuItem);

        menuBar.add(mapsMenu);

        analysisMenu.setText("Analysis");

        jMenuItemGrpID.setText("Identify Groups");
        analysisMenu.add(jMenuItemGrpID);

        jMenuItemExpDes.setText("Experimental Design");
        analysisMenu.add(jMenuItemExpDes);

        jMenuItemMeasure.setText("Select Measures");
        analysisMenu.add(jMenuItemMeasure);

        jMenuItemCompute.setText("Compute");
        jMenuItemCompute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemComputeActionPerformed(evt);
            }
        });
        analysisMenu.add(jMenuItemCompute);

        menuBar.add(analysisMenu);

        jMenu1.setText("Video/Image");

        jMenuItem1.setText("Zones");
        jMenu1.add(jMenuItem1);

        jMenuItem6.setText("Video Properties");
        jMenu1.add(jMenuItem6);

        menuBar.add(jMenu1);

        jMenu2.setText("Tracking");
        menuBar.add(jMenu2);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");
        editMenu.setEnabled(false);

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");
        helpMenu.setEnabled(false);

        contentMenuItem.setMnemonic('c');
        contentMenuItem.setText("Contents");
        helpMenu.add(contentMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(desktopPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void ImportMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportMenuItemActionPerformed
        // TODO add your handling code here:
        //Choose data file
        //Open datafile
        //Initialise the data using DataTrace
        //Calculate the velocity using differentiate function
        //Generate the residence time weighted heat map,velocity map, component along search center and orthogonal
        //Differentiate and produce the differentials
        var inpDataDialog = new MultiFileDialog(null,true);
        inpDataDialog.setVisible(true);
        
        var fNames = inpDataDialog.getSelectionArray();
        
        if(fNames != null|| fNames.length >0)
            populateDataFileList(fNames);
        
    }//GEN-LAST:event_ImportMenuItemActionPerformed

    private void populateDataFileList(String[] fNames) {
        dManager = new DataManager();
        dManager.setDataFileNames(new String[fNames.length]);
        String [] failedFiles = new String[fNames.length];
        FileDetailModel.setRowCount(fNames.length);
        int sCount = 0,fCount = 0; //count of successfully opened files and count of files failed to open
        for(var name : fNames){
            var file = new File(name);
            if (file.exists()){
                dManager.getDataFileNames()[sCount]= name;
                this.FileDetailModel.setValueAt(file.getParent(), sCount,0);
                this.FileDetailModel.setValueAt(file.getName(), sCount,1);
                sCount++;
            }
            else
                failedFiles[fCount++] = name;
        }
        
        //dManager.readData(); 
    }

    private void residencemapMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_residencemapMenuItemActionPerformed
        generateResidenceMap(dManager);
    }//GEN-LAST:event_residencemapMenuItemActionPerformed

    private void generateResidenceMap(DataManager manager) {
        // TODO add your handling code here:
        int xRes = manager.getXRes();
        int yRes = manager.getYRes();
        int count = 0;
        JHeatMapArray rMaps[] = new JHeatMapArray[manager.getFileCount()];
        JVectorCmpImg [] rmapImages = new JVectorCmpImg[manager.getFileCount()];
        
        //dManager.aveHMap = new FloatProcessor(dManager.getXRes(),dManager.getYRes(),residenceMap.to1DArray());
        
        for(var timeTrace : manager.getTimeData()){
            
            JHeatMapArray residenceMap = new JHeatMapArray(xRes,yRes);
            residenceMap.setTimeSeries(timeTrace);
            
            rmapImages[count] = new JVectorCmpImg(xRes,yRes,1);
            rmapImages[count].addScalar(residenceMap);
            //rMaps[count] = residenceMap;
            count++;
        }
        
        String folderpath = manager.getOutPath();
        if(!folderpath.isBlank())
            folderpath = folderpath + File.separator+"Residence Maps";
        else
            folderpath = System.getProperty("user.dir")+File.separator+"Residence Maps";
        
        File newDir = new File(folderpath);
        //boolean mkdir = false;
        if(!newDir.isDirectory())
                        newDir.mkdir();
        //folderpath = (mkdir) ? folderpath : manager.getOutPath();
        int fileCount = 0;
        this.hmapStk = new ImagePlus("HeatMaps" );
        this.stk = new ImageStack(manager.getXRes(),manager.getYRes());
        String label;
        for(var rmap : rmapImages){
            var tmpName = (manager.getDataFileNames()[fileCount]);
            label  = "HMap of "+ tmpName.substring(1+tmpName.lastIndexOf(File.separator));  
            stk.addSlice(rmap.getImages()[0].getProcessor());
            stk.setSliceLabel(label,fileCount+1);
            rmap.saveImages(folderpath,label);
            fileCount++;
        }
        hmapStk.setStack(stk);
        hmapStk.show();
    }

    private void jFolderOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFolderOptionsActionPerformed
        // TODO add your handling code here:
        //Design GUI to let user select data folders, resutls folder etc.
        //These data are stored in datamanager. 
        //These options along with any other project specific details can be stored and retrived 
        //when the user saves the project. 
        JFileChooser fileChooser = new JFileChooser();
        if(!dManager.getInPath().isBlank()){
            File startDirectory = new File(dManager.getInPath());
            if(startDirectory.isDirectory())
                fileChooser.setCurrentDirectory(startDirectory);
        }
        fileChooser.setMultiSelectionEnabled(false);
        fileChooser.setDialogType(JFileChooser.DIRECTORIES_ONLY & JFileChooser.OPEN_DIALOG);
        int retCode = fileChooser.showOpenDialog(this);
        if(retCode == JFileChooser.APPROVE_OPTION)
            dManager.setInPath(fileChooser.getSelectedFile().getAbsolutePath());
        
        JFileChooser fileChooser2 = new JFileChooser();
        if(!dManager.getOutPath().isBlank()){
            File startDirectory = new File(dManager.getOutPath());
            if(startDirectory.isDirectory())
                fileChooser.setCurrentDirectory(startDirectory);
        }
        fileChooser2.setMultiSelectionEnabled(false);
        fileChooser2.setDialogType(JFileChooser.DIRECTORIES_ONLY & JFileChooser.SAVE_DIALOG );
         retCode = fileChooser.showSaveDialog(this);
            if(retCode == JFileChooser.APPROVE_OPTION)
                dManager.setOutPath(fileChooser.getSelectedFile().getAbsolutePath());
    }//GEN-LAST:event_jFolderOptionsActionPerformed

    private void jMenuItemComputeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemComputeActionPerformed
        // TODO add your handling code here:
        dManager.readData();
        this.generateResidenceMap(dManager);      
        int count = 0 ;
        var accelField = dManager.getAccelarationField();
        JVectorCmpImg [] rMaps,velocityMaps,accelMaps;
        velocityMaps = new JVectorCmpImg[dManager.getFileCount()];
        accelMaps = new JVectorCmpImg[dManager.getFileCount()];
        rMaps = new JVectorCmpImg[dManager.getFileCount()];
        JVectorSpace aField;
        JHeatMapArray rMap;
        for(JVectorSpace vField : dManager.getVelocityField()){
            
            velocityMaps[count] = new JVectorCmpImg(vField);
            accelMaps[count] = new JVectorCmpImg(accelField[count]); 
            velocityMaps[count].saveImages(dManager.getOutPath(), dManager.getDataFileNames()[count]+"Vel");
            accelMaps[count].saveImages(dManager.getOutPath(),dManager.getDataFileNames()[count]+"Acc");
            
        }
        
         
        
    }//GEN-LAST:event_jMenuItemComputeActionPerformed

    private void TrialSelComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TrialSelComboBoxActionPerformed
        // TODO add your handling code here:
       //String Trialname = (String) TrialSelComboBox.getSelectedItem();
       this.GrpSelComboBox.removeAllItems();
       int selIdx = TrialSelComboBox.getSelectedIndex();
       boolean isPresent = false;
       extTableModel tmodel = (extTableModel)Trial_No_Table.getModel();
       Object test;
       if(selIdx >= 0){
           for(int Count = 1 ; Count <= nGrps ; Count ++){
            test = tmodel.getValueAt(selIdx, Count);
            if(test != null)
                isPresent = (Boolean)test;
            else{
                javax.swing.JOptionPane.showMessageDialog(this,"the pointer in null");
            }
                
            //isPresent = (Boolean) this.Trial_No_Table.getValueAt(selIdx, Count);
               if (isPresent)
                   this.GrpSelComboBox.addItem((String)this.Trial_No_Table.getColumnName(Count) );
           }
       }
       
       
    }//GEN-LAST:event_TrialSelComboBoxActionPerformed

    private void RemoveFile_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveFile_ButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RemoveFile_ButtonActionPerformed

    private void AddFiles_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddFiles_ButtonActionPerformed
        
     this.ImportMenuItemActionPerformed(evt);
        
    }//GEN-LAST:event_AddFiles_ButtonActionPerformed

    private void jFormattedTextField_NoOfGrpsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField_NoOfGrpsActionPerformed
        
        if(updateAnimalGrpSummaryTable())return;
        //this.updateGrpTrialSelTable();
        
    }//GEN-LAST:event_jFormattedTextField_NoOfGrpsActionPerformed

    private boolean updateAnimalGrpSummaryTable() throws NumberFormatException, HeadlessException {
        boolean sameSampleSz = this.SampleSizeSel.getModel().isSelected();
        boolean tableEmpty = true;
        if (readnGrps()) {
                return true;
            }
        if(this.AnimalGrpSummaryTable.getRowCount() == 0)
            tableEmpty = true;
        if (tableEmpty || ! sameSampleSz) {
            
            int nRows = this.AnimalGrpModel.getRowCount();
            
            this.AnimalGrpModel.setRowCount(nGrps);
            this.nAnimals = Integer.parseInt(nAnimals_Text.getText());
            if(nRows <= nGrps)
                for(int Count = nRows ; Count < nGrps ; Count ++){
                    String tmp = "Grp# "+(Count+1);
                    if(Count < grpNames.size())
                        grpNames.set(Count, tmp);
                    else 
                        this.grpNames.add(Count,tmp);
                    
                    this.AnimalGrpModel.setValueAt(""+ (Count+1), Count, 0);
                    this.AnimalGrpModel.setValueAt(tmp,Count,1);
                    this.AnimalGrpModel.setValueAt(this.nAnimals, Count, 2);
                    
                }
            this.AnimalGrpSummaryTable.setEnabled(true);
            this.nAnimals_Text.setEnabled(false);
            updateGrpTrialSelTable();
        }else {
            this.AnimalGrpSummaryTable.setEnabled(false);
            this.nAnimals_Text.setEnabled(true);
           
        }
        
        //updateGrpTrialSelTable();
        
        return false;
    }

    private void updateGrpTrialSelTable() throws NumberFormatException {
        nTrial = Integer.parseInt(this.jFormattedText_nTrials.getText());
        
        Class [] Format = new Class[nGrps+1];
        String [] nColID = new String[nGrps+1];
        nColID[0] = "Trial Name";
        Format[0] = String.class;
        
        for(int Count = 1 ; Count <= nGrps ; Count ++){
            Format[Count] = Boolean.class;
            nColID[Count] = grpNames.get(Count-1);
        }
        
        this.TrialNoModel.setTableFormat(Format);
        this.TrialNoModel.setColumnCount(nGrps+1);
        
        this.TrialNoModel.setColumnIdentifiers(nColID);
        this.TrialNoModel.setRowCount(nTrial);
        
       
        for(int Count = 0 ; Count < nTrial ; Count ++){
            String tmp = "Trial# "+(Count+1);
            if(Count < trialNames.size())
                trialNames.set(Count,tmp);
            else
                this.trialNames.add(Count,tmp );
            this.TrialNoModel.setValueAt(tmp, Count, 0);
            for(int gCount = 1 ; gCount <= nGrps ; gCount++)
                this.TrialNoModel.setValueAt(Boolean.TRUE,Count, gCount);
        }
        this.Trial_No_Table.setModel(TrialNoModel);
    }

    private void upDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upDateButtonActionPerformed
        if(this.AnimalGrpSummaryTable.getRowCount() == 0)
            this.updateAnimalGrpSummaryTable();
        if(this.Trial_No_Table.getRowCount() == 0)
            this.updateGrpTrialSelTable();
        lockExpDefInputUI();
        
        TrialSelComboBox.removeAllItems();
        //GrpSelComboBox.removeAllItems();
        //AnimalSelComboBox.removeAllItems();
        if(Trial_No_Table.getRowCount() != nTrial){
            javax.swing.JOptionPane.showMessageDialog(this, "The no of trials "+Trial_No_Table.getRowCount()+"  and grp name entry does not match "+ nTrial);
            return;
        }
        for(int Count  = 0 ; Count < nTrial ; Count++)
            TrialSelComboBox.addItem((String)this.Trial_No_Table.getValueAt(Count,0));
                
    }//GEN-LAST:event_upDateButtonActionPerformed

    private void lockExpDefInputUI() {
        // TODO add your handling code here:
        //Lock the UI diable all the input columns and make the tables uneditable
        
        this.jFormattedTextField_NoOfGrps.setEditable(false);
        this.jFormattedText_nTrials.setEditable(false);
        this.nAnimals_Text.setEditable(false);
        this.SampleSizeSel.setEnabled(false);
        this.AnimalGrpSummaryTable.setEnabled(false);
        this.Trial_No_Table.setEnabled(false);
        
        
    }
    private void ulockExpDefInputUI(){
        this.jFormattedTextField_NoOfGrps.setEditable(true);
        this.jFormattedText_nTrials.setEditable(true);
        this.nAnimals_Text.setEditable(true);
        this.SampleSizeSel.setEnabled(true);
        this.AnimalGrpSummaryTable.setEnabled(true);
       // this.Trial_No_Table.setEnabled(true);
    }

    private void reset_AnGrTr_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_AnGrTr_ButtonActionPerformed
        // TODO add your handling code here:
        this.ulockExpDefInputUI();
    }//GEN-LAST:event_reset_AnGrTr_ButtonActionPerformed

    private void SampleSizeSelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SampleSizeSelItemStateChanged
        // TODO add your handling code here:
         if(updateAnimalGrpSummaryTable())return;
            //this.updateGrpTrialSelTable();
    }//GEN-LAST:event_SampleSizeSelItemStateChanged

    private void GrpSelComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GrpSelComboBoxActionPerformed
        // TODO add your handling code here:
       this.AnimalSelComboBox.removeAllItems();
       int trialSelIdx = TrialSelComboBox.getSelectedIndex();
       int grpSelIdx = GrpSelComboBox.getSelectedIndex();
       ArrayList selList = new ArrayList();
       //boolean isPresent = false;
       extTableModel tmodel = (extTableModel)Trial_No_Table.getModel();
       Object test;
       if(trialSelIdx >= 0){
           for(int Count = 1 ; Count <= nGrps ; Count ++){
            test = tmodel.getValueAt(trialSelIdx, Count);
            if(test != null){
                if((Boolean)test)
                           selList.add(Count);
            }
            else{
                javax.swing.JOptionPane.showMessageDialog(this,"the pointer is null");
            }
           }
       }
            //isPresent = (Boolean) this.Trial_No_Table.getValueAt(selIdx, Count);
       if(grpSelIdx >= 0){
           var grpID = (Integer)selList.get(grpSelIdx);
           this.AnimalSelComboBox.removeAllItems();
           int nAni;
           nAni = (Integer)this.AnimalGrpSummaryTable.getValueAt(grpID-1, 2);
           for(int animalCount = 1 ; animalCount <= nAni ; animalCount++)
            this.AnimalSelComboBox.addItem(""+animalCount );
       }
       
    }//GEN-LAST:event_GrpSelComboBoxActionPerformed

    private void Assign_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Assign_ButtonActionPerformed
        
        int [] selectedFiles = this.FileDetail_Table.getSelectedRows();
        int grpSelIdx =  GrpSelComboBox.getSelectedIndex();
        int trialSelIdx =  TrialSelComboBox.getSelectedIndex();
        int aniSelIdx =    AnimalSelComboBox.getSelectedIndex();                //TO DO UID field  for datamanager ??
       
        String asnString[] = new String[4];
        
        for( int Idx : selectedFiles){
            asnString[0] = ((String) FileDetail_Table.getValueAt(Idx, 0) +File.separator+ (String)FileDetail_Table.getValueAt(Idx, 1));
            asnString[1] = (String) AnimalSelComboBox.getSelectedItem();
            asnString[2] = (String) GrpSelComboBox.getSelectedItem();
            asnString[3] = (String) TrialSelComboBox.getSelectedItem();
            FileAssignmentModel.addRow(asnString);
            //At this point there is no cross checking if the file is assigned multiple times. 
            //Also there is no simple way to assign the animal #
        }
        FileAssignmentTable.setModel(FileAssignmentModel);
        
        //Create data organisation and mapping in Data manager. 
        // Animal UID maps to file. One animal ID might map to more than one data file (resolve it using 
                                                 //reverse map constructed from file name to trialID.
        //Also create a data file info class that stores the start frame, end frame resolution, pool roi, quadrant roi, platform roi and 
        //
        //group UID maps to animal
        //Trials maps to groups
        //Make grps
        //assign files
        //update table
    }//GEN-LAST:event_Assign_ButtonActionPerformed

    private void AllGrpsinAllTrialCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_AllGrpsinAllTrialCheckBoxItemStateChanged
        // TODO add your handling code here:
        if(AllGrpsinAllTrialCheckBox.isSelected()){
            
            this.Trial_No_Table.removeAll();
            this.updateGrpTrialSelTable();
            Trial_No_Table.setEnabled(false);
        }else{
            Trial_No_Table.setEnabled(true);
        }
        
    }//GEN-LAST:event_AllGrpsinAllTrialCheckBoxItemStateChanged

    private void xResTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xResTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xResTxtFieldActionPerformed

    private void yResTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yResTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yResTxtFieldActionPerformed

    private void RunGrp_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RunGrp_ButtonActionPerformed
        // TODO add your handling code here:

        //Form grp relevant data managers
        //Get average images
        //Process both individual as well as grp through
        // steps of i) interpolation - surface fit , bilinear and gaussian blur
        //         ii) differentiation -
        //        iii) divergence maps -
        //expData = new ArrayList<ArrayList>();
        TrialData = new ArrayList<>();
        DataManager grpData;
        DefaultMutableTreeNode trialNode,grpNode;

        this.expDgnTree.removeAll();
        treeModel = (DefaultTreeModel) expDgnTree.getModel();

        for(int trialCount = 0 ; trialCount < nTrial ; trialCount++){
            trialNode = new DefaultMutableTreeNode(trialNames.get(trialCount));
            treeModel.insertNodeInto(trialNode,trialRoot, trialCount);
            ArrayList <DataManager> trialData = new ArrayList<>();
            for(int grpCount = 0 ; grpCount < nGrps ; grpCount++){
                grpData = new DataManager();
                trialData.add(grpCount,grpData);
                grpNode = new DefaultMutableTreeNode(grpNames.get(grpCount));
                treeModel.insertNodeInto(grpNode, trialNode,grpCount);
            }
            TrialData.add(trialCount, trialData);
        }

        int nFiles = FileAssignmentTable.getRowCount();
        String fName = "", grpName, trialName;
        int aUID;
        int gUID;
        int tUID;
        int [][] nFileAssigned;

        nFileAssigned = new int[trialNames.size()][grpNames.size()];
        DefaultMutableTreeNode fileLeaf,trNode;

        for(int Count = 0 ; Count < nFiles ; Count++){
            fName = (String)FileAssignmentTable.getValueAt(Count,0);
            grpName = (String)FileAssignmentTable.getValueAt(Count, 2);
            trialName = (String)FileAssignmentTable.getValueAt(Count,3);
            //aName =  Need to set the animal ID here
            gUID = grpNames.indexOf(grpName);
            tUID = trialNames.indexOf(trialName);
            //nFileAsigntoGrp[gUID]++;
            nFileAssigned[tUID][gUID]++;
            TrialData.get(tUID).get(gUID).addDataFile(/*aUID,*/fName); //Need to retrive aUID coresponding to aName
            fileLeaf = new DefaultMutableTreeNode(fName);
            trNode = ((DefaultMutableTreeNode)treeModel.getChild(trialRoot, tUID));
            grpNode = ((DefaultMutableTreeNode)treeModel.getChild(trNode, gUID));
            treeModel.insertNodeInto(fileLeaf,grpNode, grpNode.getChildCount());
        }

        DataManager tmpManager;
        int xRes = Integer.parseInt(this.xResTxtField.getText());
        int yRes = Integer.parseInt(this.yResTxtField.getText());
        JVectorSpace [] vFields, aFields;
        JVectorCmpImg vImgs, rImgs, aImgs;
        DataTrace_ver_3 [] timeTrace;

        for(int tCount = 0 ; tCount < nTrial ; tCount++)
            for(int gCount = 0 ; gCount < nGrps ; gCount++){

                if(nFileAssigned[tCount][gCount] == 0 )
                    continue;

                tmpManager = TrialData.get(tCount).get(gCount);
                tmpManager.setXRes(xRes);
                tmpManager.setYRes(yRes);
                tmpManager.setOutPath(fName.substring(0,fName.lastIndexOf(File.separatorChar))
                        +File.separator+trialNames.get(tCount)+File.separator+grpNames.get(gCount));
                tmpManager.readData();

                this.generateResidenceMap(tmpManager);
                //timeTrace = tmpManager.getTimeData();
                vFields = tmpManager.getVelocityField();
                aFields = tmpManager.getAccelarationField();
                
                int dataCount = 0;
                //JVectorSpace vSpace;
                for(JVectorSpace vSpace : vFields){
                    var tmpName = (tmpManager.getDataFileNames()[dataCount]);
                    var label  = "Vel of "+ tmpName.substring(1+tmpName.lastIndexOf(File.separator));
                    var label_acc = "Acc of "+ tmpName.substring(1+tmpName.lastIndexOf(File.separator));
                    
                    
                    vImgs = new JVectorCmpImg(vSpace);
                    aImgs = new JVectorCmpImg(aFields[dataCount]);
                   
                    vImgs.saveImages(tmpManager.getOutPath()+File.separator+ "Velocity Cmps",label);
                    aImgs.saveImages(tmpManager.getOutPath()+File.separator+ "Accelaration Cmps",label_acc);
                    
                    //vImgs = new JVectorCmpImg();
                    //vSpace.getProjections(Vector, true);
                    dataCount++;
                }

            }

    }//GEN-LAST:event_RunGrp_ButtonActionPerformed

    private void expDgnTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_expDgnTreeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_expDgnTreeMouseClicked

    private boolean readnGrps() throws NumberFormatException, HeadlessException {
        if (!jFormattedTextField_NoOfGrps.isEditValid()) {
            javax.swing.JOptionPane.showMessageDialog(null, "The number of grps entry is invalid");
            return true;
        }
        this.nGrps = Integer.parseInt(jFormattedTextField_NoOfGrps.getText());
        return false;
    }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        boolean found = false;
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("System".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    found = true;
                    break;
                }
            }
            
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VectorAnalysisMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VectorAnalysisMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VectorAnalysisMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VectorAnalysisMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new VectorAnalysisMDI().setVisible(true);
            }
        });
    }
    private DefaultTreeModel treeModel; 
    private DefaultMutableTreeNode expRoot, trialRoot, grpRoot,aniRoot;
    //private ConcurrentHashMap <String, String> fileNameMap;
    //private ConcurrentHashMap <String,JList> GrpIDMaps;
    //private ConcurrentHashMap <String,Integer> AnimalIDMaps;
    private ArrayList<String> grpNames;
    private ArrayList<String> trialNames;
    private ArrayList <ArrayList> expData;
    private ArrayList </*of groups*/ArrayList</*which in turn array of animal's data*/DataManager> >TrialData;
    //private JVectorCmpImg heatMaps;
    private DefaultTableModel AnimalGrpModel;
    private DefaultTableModel FileAssignmentModel;
    private DefaultTableModel FileDetailModel;
    private extTableModel TrialNoModel;
    
    //data strunctures for storing and processing average data
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddFiles_Button;
    private javax.swing.JCheckBox AllGrpsinAllTrialCheckBox;
    private javax.swing.JPanel AnalysisDesign_jPanel;
    private javax.swing.JTable AnimalGrpSummaryTable;
    private javax.swing.JLabel AnimalLabel;
    private javax.swing.JComboBox<String> AnimalSelComboBox;
    private javax.swing.JButton Assign_Button;
    private javax.swing.JPanel DataFiles_jPanel;
    private javax.swing.JPanel DeskTopPanel;
    private javax.swing.JPanel ExpDef_jPanel;
    private javax.swing.JTable FileAssignmentTable;
    private javax.swing.JTable FileDetail_Table;
    private javax.swing.JButton GenConMaps_Button;
    private javax.swing.JButton GenCurlMaps_Button;
    private javax.swing.JLabel GrpLabel;
    private javax.swing.JComboBox<String> GrpSelComboBox;
    private javax.swing.JButton HeatMap_Button;
    private javax.swing.JPanel ImageDisplay_Panel;
    private javax.swing.JMenuItem ImportMenuItem;
    private javax.swing.JTabbedPane InfoTab;
    private javax.swing.JPanel MessageBox_Panel;
    private javax.swing.JButton OpenFileAssignmentsButton;
    private javax.swing.JFormattedTextField PlatXjFtTxt;
    private javax.swing.JFormattedTextField PlatYjFtTxt1;
    private javax.swing.JButton QuadAna_Button;
    private javax.swing.JButton RemoveFile_Button;
    private javax.swing.JButton RunGrp_Button;
    private javax.swing.JCheckBox SampleSizeSel;
    private javax.swing.JButton SaveFileAssignmentsButton;
    private javax.swing.JLabel SelDesLabel;
    private javax.swing.JLabel TrialLabel;
    private javax.swing.JComboBox<String> TrialSelComboBox;
    private javax.swing.JTable Trial_No_Table;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenu analysisMenu;
    private javax.swing.JTextField assignFileJTxt;
    private javax.swing.JMenuItem contentMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JTree expDgnTree;
    private javax.swing.JTextField expFileNoJText;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenuItem jFolderOptions;
    private javax.swing.JFormattedTextField jFormattedTextField_NoOfGrps;
    private javax.swing.JFormattedTextField jFormattedText_nTrials;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_NoOfAnimals;
    private javax.swing.JLabel jLabel_Number_of_GrpTxt;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItemCompute;
    private javax.swing.JMenuItem jMenuItemExpDes;
    private javax.swing.JMenuItem jMenuItemGrpID;
    private javax.swing.JMenuItem jMenuItemMeasure;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JMenu mapsMenu;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JFormattedTextField nAnimals_Text;
    private javax.swing.JFormattedTextField ocXjFtTxt2;
    private javax.swing.JFormattedTextField ocYjFtTxt3;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JTextField remainingDatafilesJText;
    private javax.swing.JButton reset_AnGrTr_Button;
    private javax.swing.JMenuItem residencemapMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JButton surfaceFitButton;
    private javax.swing.JButton upDateButton;
    private javax.swing.JFormattedTextField xResTxtField;
    private javax.swing.JFormattedTextField yResTxtField;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
   class extTableModel<C extends Class> extends DefaultTableModel{
       ArrayList< Class > TableFormat = new ArrayList();
        public  extTableModel(DefaultTableModel model){
            
           super(model.getRowCount(),model.getColumnCount());
       }
       @Override
       public Class<?> getColumnClass(int columnIdx){
           if( columnIdx < this.getColumnCount()){
               
               return TableFormat.get(columnIdx);
           }
           else    
            return super.getColumnClass(columnIdx);
       }
       public void setTableFormat(C [] format){
           for(C c : format)
            TableFormat.add(c);
       }
       public ArrayList<Class> getTableFormat(){
           return TableFormat;
       }
    };
}
